---
import CartIcon from '@icons/cart.astro';

const links = [
  { href: '/', text: 'Nuestros diseños' },
  { href: '/clientes', text: 'Clientes' },
  { href: '/galeria', text: 'Galería de ideas' },
];
---

<nav class="nav">
  <div class="nav-container">
    <!-- Izquierda: logo -->
    <a href="/" class="logo" aria-label="Inicio">
      <img src="/logo.svg" alt="We Masha" />
    </a>

    <!-- Centro: menú hamburguesa (solo mobile) -->
    <button id="menu-toggle" class="menu-toggle" aria-label="Abrir menú" aria-expanded="false">
      ☰
    </button>

    <!-- Derecha -->
    <div class="right desktop-only">
      <ul class="links">
        {links.map((l) => (
          <li><a href={l.href}>{l.text}</a></li>
        ))}
      </ul>
      <a href="/cart" class="cart" aria-label="Carrito">
        <CartIcon />
        <span id="cart-count" class="badge">0</span>
      </a>
    </div>

    <!-- Carrito en mobile (derecha) -->
    <a href="/cart" class="cart mobile-only" aria-label="Carrito">
      <CartIcon />
      <span id="cart-count-mobile" class="badge">0</span>
    </a>
  </div>

  <!-- Menú desplegable en mobile -->
  <ul id="nav-links" class="drawer">
    {links.map((l) => (
      <li><a href={l.href}>{l.text}</a></li>
    ))}
  </ul>
</nav>
<div id="nav-spacer" aria-hidden="true"></div>


<script type="module" is:inline>
  // --------- Badges del carrito ---------
  function getCartTotal() {
    try {
      const carrito = JSON.parse(localStorage.getItem('carrito') || '[]');
      return Array.isArray(carrito)
        ? carrito.reduce((a, p) => a + (p && p.cantidad ? p.cantidad : 1), 0)
        : 0;
    } catch { return 0; }
  }
  function updateBadges() {
    const total = getCartTotal();
    const d = document.getElementById('cart-count');
    const m = document.getElementById('cart-count-mobile');
    if (d) d.textContent = String(total);
    if (m) m.textContent = String(total);
  }
  updateBadges();
  window.addEventListener('carrito:actualizado', updateBadges);
  window.addEventListener('storage', (e) => { if (e.key === 'carrito') updateBadges(); });
  document.addEventListener('astro:page-load', updateBadges);

  // --------- Header fijo + menú superpuesto robusto ---------
  let nav, drawer, toggle, spacer;

  function refreshRefs() {
    nav    = document.querySelector('.nav');
    drawer = document.getElementById('nav-links');
    toggle = document.getElementById('menu-toggle');

    // spacer (para que el contenido no quede debajo del header fijo)
    spacer = document.getElementById('nav-spacer');
    if (!spacer) {
      spacer = document.createElement('div');
      spacer.id = 'nav-spacer';
      spacer.setAttribute('aria-hidden', 'true');
      if (nav && nav.parentElement) nav.parentElement.insertBefore(spacer, nav.nextSibling);
    }
    setSpacerHeight();
  }

  function headerHeight() {
    return nav && nav.offsetHeight ? nav.offsetHeight : 56;
  }

  function setSpacerHeight() {
    if (spacer) spacer.style.height = headerHeight() + 'px';
    if (drawer) {
      const h = headerHeight();
      drawer.style.top = h + 'px';
      drawer.style.maxHeight = `calc(100vh - ${h}px)`;
    }
  }

  function openDrawer() {
    if (!drawer) return;
    setSpacerHeight();
    drawer.classList.add('open');
    document.body.style.overflow = 'hidden';
    if (toggle) toggle.setAttribute('aria-expanded', 'true');
  }

  function closeDrawer() {
    if (!drawer) return;
    drawer.classList.remove('open');
    document.body.style.overflow = '';
    if (toggle) toggle.setAttribute('aria-expanded', 'false');
  }

  // Delegación global (sobrevive a reemplazos de DOM)
  document.addEventListener('click', (e) => {
    refreshRefs(); // reasegura refs ante transiciones o cambios de layout

    const target = e.target instanceof Element ? e.target : null;
    if (!target) return;

    // click en toggle (o su hijo)
    if (target.closest('#menu-toggle')) {
      e.stopPropagation();
      if (drawer && drawer.classList.contains('open')) closeDrawer();
      else openDrawer();
      return;
    }

    // cerrar si se hace click fuera del drawer
    if (drawer && drawer.classList.contains('open')) {
      const clickDentroDrawer = drawer.contains(target);
      if (!clickDentroDrawer) closeDrawer();
    }

    // cerrar al clickear un link del menú
    if (target.closest('#nav-links a')) {
      closeDrawer();
    }
  });

  // Altura correcta en resize / cambio de página
  window.addEventListener('resize', setSpacerHeight);
  document.addEventListener('astro:page-load', () => {
    refreshRefs();
    setSpacerHeight();
  });

  // Primera carga
  refreshRefs();
</script>


<style>
.nav {
  position: fixed;   /* antes: sticky */
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;      /* antes: 40 */
  background: #fff;
  box-shadow: 0 2px 10px rgba(0,0,0,.05);
}

  .nav-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: .75rem 1rem;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    position: relative;
  }
  .logo img { height: 15px; }

  /* botón hamburguesa centrado (mobile) */
  .menu-toggle {
    justify-self: center;
    font-size: 1.5rem;
    background: none;
    border: 0;
    cursor: pointer;
    padding: 0px 10px;
  }

  .right { display: flex; align-items: center; gap: 1.5rem; justify-self: end; }
  .links { display: flex; list-style: none; gap: 1.25rem; margin: 0; padding: 0; }
  .links a { text-decoration: none; color: #333; font-weight: 500; }
  .links a:hover { color: #BE185D; }

  .cart { position: relative; display: inline-flex; align-items: center; text-decoration: none; color: #333; }
  .badge {
    position: absolute; top: -8px; right: -10px;
    background: #BE185D; color: #fff; font-size: .7rem;
    padding: .15rem .45rem; border-radius: 999px; line-height: 1;
  }

  /* Drawer mobile superpuesto */
  .drawer{
    display: none;
    position: fixed;
    left: 0; right: 0;
    top: 56px;
    background: #fff;
    border-top: 1px solid #eee;
    z-index: 50;
    padding: .75rem 1rem 1rem;
    max-height: calc(100vh - 56px);
    overflow: auto;
  }
  .drawer.open{ display: flex; flex-direction: column; gap: .75rem; }
  .drawer a { display: block; width: 100%; padding: .5rem 0; text-decoration: none; color: #333; text-align: center; }
  .drawer a:hover { color: #BE185D; }

  /* Visibilidad responsive */
  .mobile-only { display: inline-flex; justify-self: end; }
  .desktop-only { display: none; }

  @media (min-width: 768px) {
    .nav-container { grid-template-columns: auto 1fr auto; padding: .9rem 2rem; }
    .menu-toggle, .mobile-only, .drawer { display: none !important; }
    .desktop-only { display: flex; }
    .logo img { height: 30px; }
    .drawer{ display:none !important; }
  }
</style>
